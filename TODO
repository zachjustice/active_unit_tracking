TIME ENTRY
    scan barcode of employee or unit
    parse barcode
        -all barcodes have a preamble of "b_<id>_"
        -preamble allows us to determine which time entry this data applies to
    create a row or update an existing row on the time entry table (html)
        -create/update is based on the barcode scanner preamble
        -if a row exists with the barcode scanner's id, we update that row
        with the newly scanned informatoin
        -if a row doesn't exist with this info, we create a row
        -(technically we use a hash of barcode scanner id => time_entry_state
        where the time entry state tells you whether we are ready to 
        start a new time, initializing a new time entry, keeping time on
        an in progress time entry, paused, or finished)
    we then update tb_time_entry with the barcode's info
        -upsert the time entry using the employee/unit barcode
        -We create a time entry when there doesn't exist a time entry with
        a null end date and missing employee name or unit
        -If there's a time entry for the barcode scanner with a null end
        date and an employee name or unit number, we update that time entry
        -there should only ever be one null end time per barcode scanner id
        -if they scan the employee name or unit twice at first, just update
        time entry 
        -if they scan the employee name and unit to start the time entry,
        but then either the employee name or unit, end the time entry.
        -when we return data, use a seperate function for determining which 
        station the time entry applies to
            -will this make it more difficult to index time entries by station?
                -yes, would need temp table shit
            -on the other hand we can determine which station a time entry correspond
            to since the first time entry is for the first station and so on.
                - paused time entries?
                - would need an additional column like is_final

DB UPDATES
    -Employee table(DONE)
        - tb_time_entry uses employee pk as fk
        - refactor employee name to employee
    -Station table
        - table for keeping track of station.
        - Contains station pk, station name, and station type
    -Station Type Table
        - station type pk, station type name, department
        - refactor tb_time_entry and db functions
    -Unit Table
        - unit, label, current station
        - refactor tb_time_entry and db functions
    -Unit/Station Timelines
        - Keep track which station each unit via tb_unit_station
        - Keep track of station timeline for models via tb_model_station_timeline

SCAN TWICE TO PAUSE GENIUSSSS
         
